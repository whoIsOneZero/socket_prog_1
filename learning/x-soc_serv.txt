/**
* IPv4 AF_INET sockets
*/
struct sockaddr_in {
    short            sin_family;   // e.g. AF_INET, AF_INET6
    unsigned short   sin_port;     // e.g. htons(3490)
    struct in_addr   sin_addr;     // see struct in_addr, below
    char             sin_zero[8];  // zero this if you want to
};

/**
* @s_addr: contains the IP address in long format
*/
struct in_addr {
    unsigned long s_addr;          // load with inet_pton()
};

struct sockaddr {
    unsigned short    sa_family;    // address family, AF_xxx
    char              sa_data[14];  // 14 bytes of protocol address
};

/*To connect to a remote server, do this first:*/
struct sockaddr_in sever;

/**
* inet_addr - converts IP address to a long format
*/
/* You need to know the IP address of the remote server you're connecting to*/
server.sin_addr.s_addr = inet_addr("74.125.235.20");

/* Description of data base entry for a single host. */
/* Store info about host */
struct hostent
{
  char *h_name;			/* Official name of host.  */
  char **h_aliases;		/* Alias list.  */
  int h_addrtype;		/* Host address type.  */
  int h_length;			/* Length of address.  */
  char **h_addr_list;		/* List of addresses from name server.  */
};